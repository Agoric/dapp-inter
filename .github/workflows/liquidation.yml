name: Liquidation E2E tests

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:
    inputs:
      network:
        description: 'Select the blockchain network for testing'
        required: false
        default: 'emerynet'
        type: choice
        options:
          - local
          - emerynet
          - devnet
          - ollinet
          - xnet
      user1_mnemonic:
        description: 'The mnemonic phrase for the account to be used for vaults'
        required: false
        type: string
      user1_address:
        description: 'user1 account address'
        required: false
        type: string
      bidder_mnemonic:
        description: 'The mnemonic phrase for the account used for bidding'
        required: false
        type: string
      bidder_address:
        description: 'bidder account address'
        required: false
        type: string
      base_image:
        description: 'Base image tag for agoric-sdk'
        required: false
        default: latest
        type: string
      docker_image:
        description: 'Docker image for the a3p chain to use in testing'
        required: false
        type: string
  pull_request:
    types:
      - labeled
      - synchronize

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  run-e2e:
    if: >-
      github.event_name == 'schedule' || 
      github.event_name == 'workflow_dispatch' ||
      contains(github.event.pull_request.labels.*.name, 'liquidation-testing')
    uses: ./.github/workflows/reusable-workflow.yml
    with:
      docker_compose_command: |
        docker compose -f test/e2e/docker-compose-liquidation.yml \
        --profile $SYNPRESS_PROFILE up --build \
        --exit-code-from synpress
      AGORIC_NET: >-
        ${{ github.event.inputs.network 
            || contains(github.event.pull_request.labels.*.name, 'emerynet') && 'emerynet' 
            || contains(github.event.pull_request.labels.*.name, 'devnet') && 'devnet' 
            || contains(github.event.pull_request.labels.*.name, 'ollinet') && 'ollinet' 
            || contains(github.event.pull_request.labels.*.name, 'xnet') && 'xnet' 
            || github.event_name == 'schedule' && 'local' 
            || 'local' 
        }}
      user1_mnemonic: ${{ inputs.user1_mnemonic }}
      user1_address: ${{ inputs.user1_address }}
      bidder_mnemonic: ${{ inputs.bidder_mnemonic }}
      bidder_address: ${{ inputs.bidder_address }}
      base_image: ${{ inputs.base_image || 'latest' }}
      docker_image: ${{ inputs.docker_image || 'ghcr.io/agoric/agoric-3-proposals:latest' }}

    secrets: inherit
