name: Reusable E2E Workflow

on:
  workflow_call:
    inputs:
      docker_compose_command:
        description: 'Docker Compose command to run E2E tests'
        required: true
        type: string
      is_emerynet_test:
        required: false
        default: false
        type: boolean
      mnemonic_phrase:
        required: false
        type: string
      user1_mnemonic:
        description: 'The mnemonic phrase for the account to be used for vaults'
        required: false
        type: string
      user1_address:
        description: 'user1 account address'
        required: false
        type: string
      bidder_mnemonic:
        description: 'The mnemonic phrase for the account used for bidding'
        required: false
        type: string
      bidder_address:
        description: 'bidder account address'
        required: false
        type: string
      base_image:
        description: 'Base image tag for agoric-sdk'
        required: false
        default: latest
        type: string

jobs:
  e2e:
    runs-on: ubuntu-latest

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: 'GCP auth'
        uses: 'google-github-actions/auth@v2'
        if: ${{ inputs.is_emerynet_test }}
        with:
          project_id: 'simulationlab'
          workload_identity_provider: 'projects/60745596728/locations/global/workloadIdentityPools/github/providers/dapp-inter'

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Run e2e tests
        run: ${{ inputs.docker_compose_command }}
        env:
          # conditionals based on github event
          SYNPRESS_PROFILE: ${{ inputs.is_emerynet_test && 'daily-tests' || 'synpress' }}
          CYPRESS_AGORIC_NET: ${{ inputs.is_emerynet_test && 'emerynet' || 'local' }}
          # for docker-compose.yml
          COMPOSE_DOCKER_CLI_BUILD: 1
          DOCKER_BUILDKIT: 1
          DOCKER_DEFAULT_PLATFORM: linux/amd64
          NGROK_AUTH: ${{ secrets.NGROK_AUTH }}
          NGROK_BASIC_AUTH: ${{ secrets.NGROK_BASIC_AUTH }}
          CYPRESS_PRIVATE_KEY_WITH_FUNDS: ${{ secrets.CYPRESS_PRIVATE_KEY_WITH_FUNDS }}
          ANVIL_FORK_URL: ${{ secrets.ANVIL_FORK_URL }}
          GH_PAT: ${{ secrets.GH_PAT }}
          GH_USERNAME: ${{ secrets.GH_USERNAME }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CYPRESS_PROJECT_ID: ${{ secrets.CYPRESS_PROJECT_ID }}
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          COMMIT_INFO_MESSAGE: ${{ github.event.pull_request.title }}
          COMMIT_INFO_SHA: ${{ github.event.pull_request.head.sha }}
          CYPRESS_MNEMONIC_PHRASE: ${{ inputs.mnemonic_phrase }}
          BASE_IMAGE_TAG_INPUT: ${{ inputs.base_image }}
          # Liquidation Secrets
          CYPRESS_GOV1_MNEMONIC: ${{ secrets.CYPRESS_GOV1_MNEMONIC }}
          CYPRESS_GOV1_ADDRESS: ${{ secrets.CYPRESS_GOV1_ADDRESS }}
          CYPRESS_GOV2_MNEMONIC: ${{ secrets.CYPRESS_GOV2_MNEMONIC }}
          CYPRESS_GOV2_ADDRESS: ${{ secrets.CYPRESS_GOV2_ADDRESS }}
          CYPRESS_USER1_MNEMONIC: ${{ secrets.CYPRESS_USER1_MNEMONIC }}
          CYPRESS_USER1_ADDRESS: ${{ secrets.CYPRESS_USER1_ADDRESS }}
          CYPRESS_BIDDER_MNEMONIC: ${{ secrets.CYPRESS_BIDDER_MNEMONIC }}
          CYPRESS_BIDDER_ADDRESS: ${{ secrets.CYPRESS_BIDDER_ADDRESS }}
          CYPRESS_USER1_MNEMONIC_INPUT: ${{ inputs.user1_mnemonic }}
          CYPRESS_USER1_ADDRESS_INPUT: ${{ inputs.user1_address }}
          CYPRESS_BIDDER_MNEMONIC_INPUT: ${{ inputs.bidder_mnemonic }}
          CYPRESS_BIDDER_ADDRESS_INPUT: ${{ inputs.bidder_address }}

      - name: Upload e2e artifacts as workflow artifacts
        uses: actions/upload-artifact@v4
        if: ${{ !inputs.is_emerynet_test && !cancelled() }}
        with:
          name: e2e-artifacts
          path: |
            test/e2e/docker/videos
            test/e2e/docker/videos-ci
            test/e2e/docker/screenshots
        continue-on-error: true

      - name: Upload e2e artifacts to GCP
        uses: google-github-actions/upload-cloud-storage@v2
        if: ${{ inputs.is_emerynet_test && !cancelled() }}
        with:
          path: 'test/e2e/docker'
          destination: 'github-artifacts/${{ github.repository }}/${{ github.run_id }}/${{ github.event.repository.updated_at }}'
        continue-on-error: true

      - name: Log Path to GCS artifacts
        if: ${{ inputs.is_emerynet_test && !cancelled() }}
        run: echo "https://console.cloud.google.com/storage/browser/github-artifacts/${{ github.repository }}/${{ github.run_id }}/${{ github.event.repository.updated_at }}/docker/videos"

      - name: Notify About Failure
        if: >
          failure() && github.event_name != 'pull_request' &&
          github.repository_owner == 'agoric'
        uses: ./.github/actions/notify-status
        with:
          webhook: ${{ secrets.SLACK_WEBHOOK_URL }}
        continue-on-error: true
