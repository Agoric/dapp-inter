apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: node
spec:
  podManagementPolicy: "Parallel"
  selector:
    matchLabels:
      app: node
  serviceName: node
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: node
    spec:
      terminationGracePeriodSeconds: 10
      serviceAccountName: opentracing-agent
      containers:
        - name: node
          image: agoric/agoric-sdk
          command: ["/bin/bash"]
          securityContext:
            capabilities:
              add:
                - SYS_PTRACE

          args: ["-x", "/entrypoint/entrypoint.sh"]
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: PODNAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: BOOTSTRAP_CONFIG
              valueFrom:
                configMapKeyRef:
                  name: instagoric-release
                  key: BOOTSTRAP_CONFIG
                  optional: true
            - name: CHAIN_ID
              valueFrom:
                configMapKeyRef:
                  name: instagoric-release
                  key: CHAIN_ID
                  optional: true
            - name: VOTING_PERIOD
              valueFrom:
                configMapKeyRef:
                  name: instagoric-release
                  key: VOTING_PERIOD
                  optional: true
            - name: HONEYCOMB_DATASET
              valueFrom:
                configMapKeyRef:
                  name: instagoric-release
                  key: HONEYCOMB_DATASET
                  optional: true
            - name: BLOCK_COMPUTE_LIMIT
              valueFrom:
                configMapKeyRef:
                  name: instagoric-release
                  key: BLOCK_COMPUTE_LIMIT
                  optional: true
            - name: WHALE_SEED
              valueFrom:
                secretKeyRef:
                  name: instagoric-secrets
                  key: WHALE_SEED
                  optional: true
            - name: FAUCET_ADDRESS
              valueFrom:
                secretKeyRef:
                  name: instagoric-secrets
                  key: FAUCET_ADDRESS
                  optional: true
            - name: HONEYCOMB_API_KEY
              valueFrom:
                secretKeyRef:
                  name: telemetry-secrets
                  key: HONEYCOMB_API_KEY
                  optional: true
            - name: ENABLE_TELEMETRY
              valueFrom:
                secretKeyRef:
                  name: telemetry-secrets
                  key: ENABLE_TELEMETRY
                  optional: true
            - name: ECON_SOLO_SEED
              valueFrom:
                secretKeyRef:
                  name: instagoric-secrets
                  key: ECON_SOLO_SEED
                  optional: true
            - name: NETNAME
              valueFrom:
                configMapKeyRef:
                  name: instagoric-release
                  key: NETNAME
            - name: NETDOMAIN
              valueFrom:
                configMapKeyRef:
                  name: instagoric-release
                  key: NETDOMAIN
                  optional: true
            - name: DOCKERTAG
              valueFrom:
                configMapKeyRef:
                  name: instagoric-release
                  key: DOCKERTAG
                  optional: true
            - name: OTEL_EXPORTER_PROMETHEUS_PORT
              value: "26661"
          ports:
            - containerPort: 26656
              name: p2p
            - containerPort: 26657
              name: rpc
            - containerPort: 8000
              name: captp
            - containerPort: 8001
              name: sidekick
            - containerPort: 8002
              name: sidekickprivate
            - containerPort: 9090
              name: grpc
            - containerPort: 26652
              name: prometheus
            - containerPort: 26660
              name: swingset
            - containerPort: 26661
              name: prom
            - containerPort: 1317
              name: api
          volumeMounts:
            - name: state
              mountPath: /state
            - name: entrypoint
              mountPath: /entrypoint
            - name: network-config
              mountPath: /config/network
            - name: otel-config
              mountPath: /config/otel
            - name: server
              mountPath: /config/server
          resources:
            limits:
              cpu: 1000m
              ephemeral-storage: 5Gi
              memory: 8Gi
            requests:
              cpu: 100m
              ephemeral-storage: 5Gi
              memory: 2Gi
        # - name: grpc-hc
        #   image: docker.io/salrashid123/grpc_health_proxy:1.0.0
        #   args: 
        #     - '--grpcaddr=localhost:9090'
        #     - '--http-listen-addr=0.0.0.0:8080'
        #     - '--logtostderr=1'
        #   ports:
        #     - containerPort: 8080
        #       name: grpc-hc
        #   # FIXME: Help, please, Ari!
        #   # Warning: Autopilot increased resource requests for StatefulSet
        #   # instagoric/validator to meet requirements.  See
        #   # http://g.co/gke/autopilot-resources.
        #   resources:
        #     limits:
        #       cpu: 500m
        #       ephemeral-storage: 1Gi
        #       memory: 3Gi
        #     requests:
        #       cpu: 250m
        #       ephemeral-storage: 1Gi
        #       memory: 1Gi
      volumes:
        - name: otel-config
          configMap:
            name: otel-config
            optional: true
        - name: entrypoint
          configMap:
            name: entrypoint
        - name: network-config
          configMap:
            name: network-config
        - name: server
          configMap:
            name: server
  volumeClaimTemplates:
    - metadata:
        name: state
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 10Gi
